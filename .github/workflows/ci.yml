name: CI (Hybrid Auto-Detect)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.detect.outputs.python }}
      node: ${{ steps.detect.outputs.node }}
    steps:
      - uses: actions/checkout@v4
      - id: detect
        shell: bash
        run: |
          set -euo pipefail
          PY=false
          ND=false
          if [ -f pyproject.toml ] || [ -f requirements.txt ] || ls tools/*.py >/dev/null 2>&1; then PY=true; fi
          if [ -f package.json ] || [ -f pnpm-lock.yaml ] || [ -f yarn.lock ]; then ND=true; fi
          echo "python=${PY}" >> "$GITHUB_OUTPUT"
          echo "node=${ND}" >> "$GITHUB_OUTPUT"

  python-ci:
    needs: detect
    if: ${{ needs.detect.outputs.python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff black pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint (ruff)
        run: ruff . || true
      - name: Format check (black)
        run: black --check . || true
      - name: Tests (pytest)
        run: |
          if ls -1 **/tests 2>/dev/null | grep -q .; then pytest -q; else echo "No tests found; skipping"; fi

  node-ci:
    needs: detect
    if: ${{ needs.detect.outputs.node == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: |
          if [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile; \
          elif [ -f yarn.lock ]; then npm i -g yarn && yarn install --frozen-lockfile; \
          elif [ -f package.json ]; then npm ci; else echo "No package manager lockfile"; fi
      - name: Lint
        run: |
          if npm run | grep -q "lint"; then npm run lint; else echo "No lint script"; fi
      - name: Test
        run: |
          if npm run | grep -q "test"; then npm test --silent --if-present; else echo "No test script"; fi
